import { ComponentFactoryResolver, OnChanges, OnInit, SimpleChanges, ViewContainerRef } from "@angular/core";
import { MdlSimpleTooltipComponent, MdlTooltipComponent } from "./mdl-tooltip.component";
import * as i0 from "@angular/core";
export declare abstract class AbstractMdlTooltipDirective implements OnInit, OnChanges {
    private vcRef;
    private large;
    private componentFactoryResolver;
    protected tooltip: string | MdlTooltipComponent | undefined;
    protected position: "left" | "right" | "top" | "bottom";
    protected tooltipComponent: MdlSimpleTooltipComponent | undefined;
    protected constructor(vcRef: ViewContainerRef, large: boolean, componentFactoryResolver: ComponentFactoryResolver);
    onMouseEnter(event: MouseEvent): void;
    onMouseLeave(): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private configureTooltipComponent;
    static ɵfac: i0.ɵɵFactoryDeclaration<AbstractMdlTooltipDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AbstractMdlTooltipDirective, never, never, {}, {}, never, never, false, never>;
}
export declare class MdlTooltipDirective extends AbstractMdlTooltipDirective {
    tooltip: string | MdlTooltipComponent | undefined;
    position: "left" | "right" | "top" | "bottom";
    constructor(vcRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver);
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlTooltipDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlTooltipDirective, "[mdl-tooltip]", never, { "tooltip": "mdl-tooltip"; "position": "mdl-tooltip-position"; }, {}, never, never, false, never>;
}
export declare class MdlTooltipLargeDirective extends AbstractMdlTooltipDirective {
    tooltip: string | MdlTooltipComponent | undefined;
    position: "left" | "right" | "top" | "bottom";
    constructor(vcRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver);
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlTooltipLargeDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlTooltipLargeDirective, "[mdl-tooltip-large]", never, { "tooltip": "mdl-tooltip-large"; "position": "mdl-tooltip-position"; }, {}, never, never, false, never>;
}
