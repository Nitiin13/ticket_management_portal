import { OnChanges, OnInit } from "@angular/core";
import { MdlError } from "../common/mdl-error";
import * as i0 from "@angular/core";
export declare class MdlUnsupportedCountOfListItemLinesError extends MdlError {
    constructor(lines: number | string);
}
export declare class MdlListComponent {
    isMdlList: boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlListComponent, "mdl-list", never, {}, {}, never, ["*"], false, never>;
}
export declare class MdlListItemComponent implements OnChanges {
    isMdlListItem: boolean;
    private linesIntern;
    get lines(): number;
    set lines(value: number | string);
    get lines2(): boolean;
    get lines3(): boolean;
    ngOnChanges(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlListItemComponent, "mdl-list-item", never, { "lines": "lines"; }, {}, never, ["*"], false, never>;
}
export declare class MdlListItemPrimaryContentComponent implements OnInit {
    private mdlListItemComponent;
    isPrimaryContent: boolean;
    constructor(mdlListItemComponent: MdlListItemComponent);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListItemPrimaryContentComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlListItemPrimaryContentComponent, "mdl-list-item-primary-content", never, {}, {}, never, ["*"], false, never>;
}
export declare class MdlListItemSecondaryContentComponent implements OnInit {
    private mdlListItemComponent;
    isSecondaryContent: boolean;
    constructor(mdlListItemComponent: MdlListItemComponent);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListItemSecondaryContentComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlListItemSecondaryContentComponent, "mdl-list-item-secondary-content", never, {}, {}, never, ["*"], false, never>;
}
export declare class MdlListItemSecondaryActionComponent implements OnInit {
    private mdlListItemComponent;
    isSecondaryAction: boolean;
    constructor(mdlListItemComponent: MdlListItemComponent);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListItemSecondaryActionComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlListItemSecondaryActionComponent, "mdl-list-item-secondary-action", never, {}, {}, never, ["*"], false, never>;
}
export declare class MdlListItemSubTitleComponent implements OnInit {
    private mdlListItemComponent;
    isSubTitle: boolean;
    constructor(mdlListItemComponent: MdlListItemPrimaryContentComponent);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListItemSubTitleComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlListItemSubTitleComponent, "mdl-list-item-sub-title", never, {}, {}, never, ["*"], false, never>;
}
export declare class MdlListItemSecondaryInfoComponent implements OnInit {
    private mdlListItemComponent;
    isSecondaryInfo: boolean;
    constructor(mdlListItemComponent: MdlListItemSecondaryContentComponent);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListItemSecondaryInfoComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlListItemSecondaryInfoComponent, "mdl-list-item-secondary-info", never, {}, {}, never, ["*"], false, never>;
}
export declare class MdlListItemTextBodyComponent implements OnInit {
    private mdlListItemComponent;
    isTextBody: boolean;
    constructor(mdlListItemComponent: MdlListItemComponent);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListItemTextBodyComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlListItemTextBodyComponent, "mdl-list-item-text-body", never, {}, {}, never, ["*"], false, never>;
}
export declare class MdlListItemIconDirective {
    isItemIcon: boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListItemIconDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlListItemIconDirective, "mdl-icon[mdl-list-item-icon]", never, {}, {}, never, never, false, never>;
}
export declare class MdlListItemAvatarDirective {
    isItemAvatar: boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlListItemAvatarDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlListItemAvatarDirective, "mdl-icon[mdl-list-item-avatar]", never, {}, {}, never, never, false, never>;
}
