import { AfterViewInit, ElementRef, Renderer2 } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
import * as i0 from "@angular/core";
export declare class MdlSliderComponent implements ControlValueAccessor, AfterViewInit {
    private renderer;
    private elRef;
    min: number | string | undefined;
    max: number | string | undefined;
    step: number | string | undefined;
    lowerEl: ElementRef | undefined;
    upperEl: ElementRef | undefined;
    inputEl: ElementRef | undefined;
    isSliderContainer: boolean;
    private valueIntern;
    private onTouchedCallback;
    private onChangeCallback;
    private disabledIntern;
    constructor(renderer: Renderer2, elRef: ElementRef);
    get disabled(): boolean;
    set disabled(value: boolean);
    get value(): number | string | undefined | null;
    set value(v: number | string | undefined | null);
    onMouseUp(event: MouseEvent): void;
    onMouseDown(event: MouseEvent): void;
    ngAfterViewInit(): void;
    writeValue(value: number): void;
    registerOnChange(fn: () => unknown): void;
    registerOnTouched(fn: () => unknown): void;
    setDisabledState(isDisabled: boolean): void;
    updateSliderUI(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlSliderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlSliderComponent, "mdl-slider", never, { "min": "min"; "max": "max"; "step": "step"; "disabled": "disabled"; "value": "value"; }, {}, never, never, false, never>;
}
