import { EventEmitter } from "@angular/core";
import * as i0 from "@angular/core";
export interface IMdlTableColumn {
    key: string;
    name: string;
    numeric?: boolean;
}
export interface IMdlTableModelItem {
    selected: boolean;
}
export interface IMdlTableModel {
    columns: IMdlTableColumn[];
    data: IMdlTableModelItem[];
}
export declare class MdlDefaultTableModel implements IMdlTableModel {
    columns: IMdlTableColumn[];
    data: IMdlTableModelItem[];
    constructor(columns: IMdlTableColumn[]);
    addAll(data: IMdlTableModelItem[]): void;
}
export declare class MdlTableComponent {
    model: IMdlTableModel | undefined;
    selectable: boolean;
    isAllSelected(): boolean;
    toggleAll(): void;
    selectionChanged(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlTableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlTableComponent, "mdl-table", never, { "model": "table-model"; }, {}, never, never, false, never>;
}
export declare class MdlSelectableTableComponent extends MdlTableComponent {
    model: IMdlTableModel | undefined;
    selected: IMdlTableModelItem[];
    selectionChange: EventEmitter<any>;
    selectable: boolean;
    allSelected: boolean;
    isAllSelected(): boolean;
    toggleAll(): void;
    selectionChanged(): void;
    private updateSelected;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlSelectableTableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdlSelectableTableComponent, "mdl-table-selectable", never, { "model": "table-model"; "selected": "table-model-selected"; }, { "selectionChange": "table-model-selectionChanged"; }, never, never, false, never>;
}
