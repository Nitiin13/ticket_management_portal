import { ElementRef, OnChanges, Renderer2 } from "@angular/core";
import * as i0 from "@angular/core";
export declare class MdlRippleDirective implements OnChanges {
    private elementRef;
    renderer: Renderer2;
    private cssContainerClasses;
    el: HTMLElement;
    rippleActive: boolean | string;
    private rippleContainer;
    private ripple;
    constructor(elementRef: ElementRef, renderer: Renderer2, cssContainerClasses: string[]);
    ngOnChanges(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlRippleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlRippleDirective, never, never, {}, {}, never, never, false, never>;
}
export declare class MdlButtonRippleDirective extends MdlRippleDirective {
    rippleActive: boolean | string;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlButtonRippleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlButtonRippleDirective, "mdl-button[mdl-ripple], button[mdl-ripple]", never, { "rippleActive": "mdl-ripple"; }, {}, never, never, false, never>;
}
export declare class MdlCheckboxRippleDirective extends MdlRippleDirective {
    rippleActive: boolean | string;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlCheckboxRippleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlCheckboxRippleDirective, "mdl-checkbox[mdl-ripple]", never, { "rippleActive": "mdl-ripple"; }, {}, never, never, false, never>;
}
export declare class MdlRadioRippleDirective extends MdlRippleDirective {
    rippleActive: boolean | string;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlRadioRippleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlRadioRippleDirective, "mdl-radio[mdl-ripple]", never, { "rippleActive": "mdl-ripple"; }, {}, never, never, false, never>;
}
export declare class MdlIconToggleRippleDirective extends MdlRippleDirective {
    rippleActive: boolean | string;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlIconToggleRippleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlIconToggleRippleDirective, "mdl-icon-toggle[mdl-ripple]", never, { "rippleActive": "mdl-ripple"; }, {}, never, never, false, never>;
}
export declare class MdlSwitchRippleDirective extends MdlRippleDirective {
    rippleActive: boolean | string;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlSwitchRippleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlSwitchRippleDirective, "mdl-switch[mdl-ripple]", never, { "rippleActive": "mdl-ripple"; }, {}, never, never, false, never>;
}
export declare class MdlMenuItemRippleDirective extends MdlRippleDirective {
    rippleActive: boolean | string;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlMenuItemRippleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlMenuItemRippleDirective, "mdl-menu-item[mdl-ripple]", never, { "rippleActive": "mdl-ripple"; }, {}, never, never, false, never>;
}
export declare class MdlAnchorRippleDirective extends MdlRippleDirective {
    rippleActive: boolean | string;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<MdlAnchorRippleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdlAnchorRippleDirective, "a[mdl-ripple],div[mdl-ripple]", never, { "rippleActive": "mdl-ripple"; }, {}, never, never, false, never>;
}
