import { Component, EventEmitter, HostBinding, Input, Output, ViewEncapsulation, } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "../icon/mdl-icon.component";
import * as i2 from "@angular/common";
export class MdlChipComponent {
    constructor() {
        // eslint-disable-next-line
        this.actionClick = new EventEmitter();
        this.isChip = true;
        this.isChipContact = false;
    }
    action() {
        this.actionClick.emit();
    }
}
MdlChipComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlChipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MdlChipComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: MdlChipComponent, selector: "mdl-chip", inputs: { mdlLabel: ["mdl-label", "mdlLabel"], mdlActionIcon: ["mdl-action-icon", "mdlActionIcon"] }, outputs: { actionClick: "action-click" }, host: { properties: { "class.mdl-chip": "this.isChip", "class.mdl-chip--contact": "this.isChipContact" } }, ngImport: i0, template: `
    <ng-content></ng-content>
    <span *ngIf="mdlLabel" class="mdl-chip__text">{{ mdlLabel }}</span>
    <button
      *ngIf="mdlActionIcon"
      (click)="action()"
      type="button"
      class="mdl-chip__action"
    >
      <mdl-icon>{{ mdlActionIcon }}</mdl-icon>
    </button>
  `, isInline: true, dependencies: [{ kind: "component", type: i1.MdlIconComponent, selector: "mdl-icon" }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlChipComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "mdl-chip",
                    template: `
    <ng-content></ng-content>
    <span *ngIf="mdlLabel" class="mdl-chip__text">{{ mdlLabel }}</span>
    <button
      *ngIf="mdlActionIcon"
      (click)="action()"
      type="button"
      class="mdl-chip__action"
    >
      <mdl-icon>{{ mdlActionIcon }}</mdl-icon>
    </button>
  `,
                    encapsulation: ViewEncapsulation.None,
                }]
        }], propDecorators: { mdlLabel: [{
                type: Input,
                args: ["mdl-label"]
            }], mdlActionIcon: [{
                type: Input,
                args: ["mdl-action-icon"]
            }], actionClick: [{
                type: Output,
                args: ["action-click"]
            }], isChip: [{
                type: HostBinding,
                args: ["class.mdl-chip"]
            }], isChipContact: [{
                type: HostBinding,
                args: ["class.mdl-chip--contact"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLWNoaXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvbGliL2NoaXBzL21kbC1jaGlwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sRUFDTixpQkFBaUIsR0FDbEIsTUFBTSxlQUFlLENBQUM7Ozs7QUFrQnZCLE1BQU0sT0FBTyxnQkFBZ0I7SUFoQjdCO1FBeUJFLDJCQUEyQjtRQUUzQixnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFHakMsV0FBTSxHQUFHLElBQUksQ0FBQztRQUdkLGtCQUFhLEdBQUcsS0FBSyxDQUFDO0tBS3ZCO0lBSEMsTUFBTTtRQUNKLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7NkdBckJVLGdCQUFnQjtpR0FBaEIsZ0JBQWdCLDRTQWRqQjs7Ozs7Ozs7Ozs7R0FXVDsyRkFHVSxnQkFBZ0I7a0JBaEI1QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxVQUFVO29CQUNwQixRQUFRLEVBQUU7Ozs7Ozs7Ozs7O0dBV1Q7b0JBQ0QsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3RDOzhCQUlDLFFBQVE7c0JBRFAsS0FBSzt1QkFBQyxXQUFXO2dCQUtsQixhQUFhO3NCQURaLEtBQUs7dUJBQUMsaUJBQWlCO2dCQUt4QixXQUFXO3NCQURWLE1BQU07dUJBQUMsY0FBYztnQkFJdEIsTUFBTTtzQkFETCxXQUFXO3VCQUFDLGdCQUFnQjtnQkFJN0IsYUFBYTtzQkFEWixXQUFXO3VCQUFDLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRXZlbnRFbWl0dGVyLFxuICBIb3N0QmluZGluZyxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJtZGwtY2hpcFwiLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8c3BhbiAqbmdJZj1cIm1kbExhYmVsXCIgY2xhc3M9XCJtZGwtY2hpcF9fdGV4dFwiPnt7IG1kbExhYmVsIH19PC9zcGFuPlxuICAgIDxidXR0b25cbiAgICAgICpuZ0lmPVwibWRsQWN0aW9uSWNvblwiXG4gICAgICAoY2xpY2spPVwiYWN0aW9uKClcIlxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICBjbGFzcz1cIm1kbC1jaGlwX19hY3Rpb25cIlxuICAgID5cbiAgICAgIDxtZGwtaWNvbj57eyBtZGxBY3Rpb25JY29uIH19PC9tZGwtaWNvbj5cbiAgICA8L2J1dHRvbj5cbiAgYCxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbn0pXG5leHBvcnQgY2xhc3MgTWRsQ2hpcENvbXBvbmVudCB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICBASW5wdXQoXCJtZGwtbGFiZWxcIilcbiAgbWRsTGFiZWw6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgQElucHV0KFwibWRsLWFjdGlvbi1pY29uXCIpXG4gIG1kbEFjdGlvbkljb246IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgQE91dHB1dChcImFjdGlvbi1jbGlja1wiKVxuICBhY3Rpb25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBASG9zdEJpbmRpbmcoXCJjbGFzcy5tZGwtY2hpcFwiKVxuICBpc0NoaXAgPSB0cnVlO1xuXG4gIEBIb3N0QmluZGluZyhcImNsYXNzLm1kbC1jaGlwLS1jb250YWN0XCIpXG4gIGlzQ2hpcENvbnRhY3QgPSBmYWxzZTtcblxuICBhY3Rpb24oKTogdm9pZCB7XG4gICAgdGhpcy5hY3Rpb25DbGljay5lbWl0KCk7XG4gIH1cbn1cbiJdfQ==