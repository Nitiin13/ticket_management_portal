import { Component, HostBinding, Input, ViewEncapsulation, } from "@angular/core";
import { toBoolean } from "../common/boolean-property";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class MdlSpinnerComponent {
    constructor() {
        this.isSpinner = true;
        this.isUpgraded = true;
        this.layers = [1, 2, 3, 4];
        this.activeIntern = false;
        this.singleColorIntern = false;
    }
    get active() {
        return this.activeIntern;
    }
    set active(value) {
        this.activeIntern = toBoolean(value);
    }
    get singleColor() {
        return this.singleColorIntern;
    }
    set singleColor(value) {
        this.singleColorIntern = toBoolean(value);
    }
}
MdlSpinnerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlSpinnerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MdlSpinnerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: MdlSpinnerComponent, selector: "mdl-spinner", inputs: { active: "active", singleColor: ["single-color", "singleColor"] }, host: { properties: { "class.mdl-spinner": "this.isSpinner", "class.is-upgraded": "this.isUpgraded", "class.is-active": "this.active", "class.mdl-spinner--single-color": "this.singleColor" } }, ngImport: i0, template: `
    <div
      *ngFor="let layer of layers"
      class="mdl-spinner__layer mdl-spinner__layer-{{ layer }}"
    >
      <div class="mdl-spinner__circle-clipper mdl-spinner__left">
        <div class="mdl-spinner__circle"></div>
      </div>
      <div class="mdl-spinner__gap-patch">
        <div class="mdl-spinner__circle"></div>
      </div>
      <div class="mdl-spinner__circle-clipper mdl-spinner__right">
        <div class="mdl-spinner__circle"></div>
      </div>
    </div>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlSpinnerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "mdl-spinner",
                    template: `
    <div
      *ngFor="let layer of layers"
      class="mdl-spinner__layer mdl-spinner__layer-{{ layer }}"
    >
      <div class="mdl-spinner__circle-clipper mdl-spinner__left">
        <div class="mdl-spinner__circle"></div>
      </div>
      <div class="mdl-spinner__gap-patch">
        <div class="mdl-spinner__circle"></div>
      </div>
      <div class="mdl-spinner__circle-clipper mdl-spinner__right">
        <div class="mdl-spinner__circle"></div>
      </div>
    </div>
  `,
                    encapsulation: ViewEncapsulation.None,
                }]
        }], propDecorators: { isSpinner: [{
                type: HostBinding,
                args: ["class.mdl-spinner"]
            }], isUpgraded: [{
                type: HostBinding,
                args: ["class.is-upgraded"]
            }], active: [{
                type: HostBinding,
                args: ["class.is-active"]
            }, {
                type: Input
            }], singleColor: [{
                type: HostBinding,
                args: ["class.mdl-spinner--single-color"]
            }, {
                type: Input,
                args: ["single-color"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLXNwaW5uZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvbGliL3NwaW5uZXIvbWRsLXNwaW5uZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsV0FBVyxFQUNYLEtBQUssRUFDTCxpQkFBaUIsR0FDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUFzQnZELE1BQU0sT0FBTyxtQkFBbUI7SUFwQmhDO1FBc0JFLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFHakIsZUFBVSxHQUFHLElBQUksQ0FBQztRQUVsQixXQUFNLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNkLGlCQUFZLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLHNCQUFpQixHQUFHLEtBQUssQ0FBQztLQXFCbkM7SUFuQkMsSUFFSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7SUFFRCxJQUFJLE1BQU0sQ0FBQyxLQUFtQztRQUM1QyxJQUFJLENBQUMsWUFBWSxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQsSUFFSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUM7SUFDaEMsQ0FBQztJQUVELElBQUksV0FBVyxDQUFDLEtBQW1DO1FBQ2pELElBQUksQ0FBQyxpQkFBaUIsR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7Z0hBN0JVLG1CQUFtQjtvR0FBbkIsbUJBQW1CLGlVQWxCcEI7Ozs7Ozs7Ozs7Ozs7OztHQWVUOzJGQUdVLG1CQUFtQjtrQkFwQi9CLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7O0dBZVQ7b0JBQ0QsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3RDOzhCQUdDLFNBQVM7c0JBRFIsV0FBVzt1QkFBQyxtQkFBbUI7Z0JBSWhDLFVBQVU7c0JBRFQsV0FBVzt1QkFBQyxtQkFBbUI7Z0JBUzVCLE1BQU07c0JBRlQsV0FBVzt1QkFBQyxpQkFBaUI7O3NCQUM3QixLQUFLO2dCQVdGLFdBQVc7c0JBRmQsV0FBVzt1QkFBQyxpQ0FBaUM7O3NCQUM3QyxLQUFLO3VCQUFDLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEhvc3RCaW5kaW5nLFxuICBJbnB1dCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyB0b0Jvb2xlYW4gfSBmcm9tIFwiLi4vY29tbW9uL2Jvb2xlYW4tcHJvcGVydHlcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcIm1kbC1zcGlubmVyXCIsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdlxuICAgICAgKm5nRm9yPVwibGV0IGxheWVyIG9mIGxheWVyc1wiXG4gICAgICBjbGFzcz1cIm1kbC1zcGlubmVyX19sYXllciBtZGwtc3Bpbm5lcl9fbGF5ZXIte3sgbGF5ZXIgfX1cIlxuICAgID5cbiAgICAgIDxkaXYgY2xhc3M9XCJtZGwtc3Bpbm5lcl9fY2lyY2xlLWNsaXBwZXIgbWRsLXNwaW5uZXJfX2xlZnRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1kbC1zcGlubmVyX19jaXJjbGVcIj48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cIm1kbC1zcGlubmVyX19nYXAtcGF0Y2hcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1kbC1zcGlubmVyX19jaXJjbGVcIj48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cIm1kbC1zcGlubmVyX19jaXJjbGUtY2xpcHBlciBtZGwtc3Bpbm5lcl9fcmlnaHRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1kbC1zcGlubmVyX19jaXJjbGVcIj48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxufSlcbmV4cG9ydCBjbGFzcyBNZGxTcGlubmVyQ29tcG9uZW50IHtcbiAgQEhvc3RCaW5kaW5nKFwiY2xhc3MubWRsLXNwaW5uZXJcIilcbiAgaXNTcGlubmVyID0gdHJ1ZTtcblxuICBASG9zdEJpbmRpbmcoXCJjbGFzcy5pcy11cGdyYWRlZFwiKVxuICBpc1VwZ3JhZGVkID0gdHJ1ZTtcblxuICBsYXllcnMgPSBbMSwgMiwgMywgNF07XG4gIHByaXZhdGUgYWN0aXZlSW50ZXJuID0gZmFsc2U7XG4gIHByaXZhdGUgc2luZ2xlQ29sb3JJbnRlcm4gPSBmYWxzZTtcblxuICBASG9zdEJpbmRpbmcoXCJjbGFzcy5pcy1hY3RpdmVcIilcbiAgQElucHV0KClcbiAgZ2V0IGFjdGl2ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5hY3RpdmVJbnRlcm47XG4gIH1cblxuICBzZXQgYWN0aXZlKHZhbHVlOiBib29sZWFuIHwgdW5kZWZpbmVkIHwgc3RyaW5nKSB7XG4gICAgdGhpcy5hY3RpdmVJbnRlcm4gPSB0b0Jvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKFwiY2xhc3MubWRsLXNwaW5uZXItLXNpbmdsZS1jb2xvclwiKVxuICBASW5wdXQoXCJzaW5nbGUtY29sb3JcIilcbiAgZ2V0IHNpbmdsZUNvbG9yKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnNpbmdsZUNvbG9ySW50ZXJuO1xuICB9XG5cbiAgc2V0IHNpbmdsZUNvbG9yKHZhbHVlOiBib29sZWFuIHwgc3RyaW5nIHwgdW5kZWZpbmVkKSB7XG4gICAgdGhpcy5zaW5nbGVDb2xvckludGVybiA9IHRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cbn1cbiJdfQ==