import { ChangeDetectionStrategy, Component, HostBinding, Input, ViewEncapsulation, } from "@angular/core";
import { toBoolean } from "../common/boolean-property";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class MdlProgressComponent {
    constructor() {
        this.progress = 0;
        this.buffer = 100;
        this.aux = 0;
        this.isProgess = true;
        this.indeterminateIntern = false;
    }
    get indeterminate() {
        return this.indeterminateIntern;
    }
    set indeterminate(value) {
        this.indeterminateIntern = toBoolean(value);
    }
    ngOnChanges(changes) {
        if (changes["buffer"]) {
            this.setBuffer(changes["buffer"].currentValue);
        }
    }
    setBuffer(b) {
        this.aux = 100 - b;
    }
}
MdlProgressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlProgressComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MdlProgressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: MdlProgressComponent, selector: "mdl-progress", inputs: { progress: "progress", buffer: "buffer", aux: "aux", indeterminate: "indeterminate" }, host: { properties: { "class.mdl-progress": "this.isProgess", "class.mdl-progress__indeterminate": "this.indeterminate" } }, usesOnChanges: true, ngImport: i0, template: `
    <div class="progressbar bar bar1" [style.width]="progress + '%'"></div>
    <div class="bufferbar bar bar2" [style.width]="buffer + '%'"></div>
    <div class="auxbar bar bar3" [ngStyle]="{ width: aux + '%' }"></div>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlProgressComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "mdl-progress",
                    template: `
    <div class="progressbar bar bar1" [style.width]="progress + '%'"></div>
    <div class="bufferbar bar bar2" [style.width]="buffer + '%'"></div>
    <div class="auxbar bar bar3" [ngStyle]="{ width: aux + '%' }"></div>
  `,
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { progress: [{
                type: Input
            }], buffer: [{
                type: Input
            }], aux: [{
                type: Input
            }], isProgess: [{
                type: HostBinding,
                args: ["class.mdl-progress"]
            }], indeterminate: [{
                type: HostBinding,
                args: ["class.mdl-progress__indeterminate"]
            }, {
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLXByb2dyZXNzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvc3JjL2xpYi9wcm9ncmVzcy9tZGwtcHJvZ3Jlc3MuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFdBQVcsRUFDWCxLQUFLLEVBR0wsaUJBQWlCLEdBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7O0FBWXZELE1BQU0sT0FBTyxvQkFBb0I7SUFWakM7UUFXVyxhQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsV0FBTSxHQUFHLEdBQUcsQ0FBQztRQUNiLFFBQUcsR0FBRyxDQUFDLENBQUM7UUFHakIsY0FBUyxHQUFHLElBQUksQ0FBQztRQUVULHdCQUFtQixHQUFHLEtBQUssQ0FBQztLQXFCckM7SUFuQkMsSUFFSSxhQUFhO1FBQ2YsT0FBTyxJQUFJLENBQUMsbUJBQW1CLENBQUM7SUFDbEMsQ0FBQztJQUVELElBQUksYUFBYSxDQUFDLEtBQWM7UUFDOUIsSUFBSSxDQUFDLG1CQUFtQixHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ2hEO0lBQ0gsQ0FBQztJQUVPLFNBQVMsQ0FBQyxDQUFTO1FBQ3pCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUNyQixDQUFDOztpSEE1QlUsb0JBQW9CO3FHQUFwQixvQkFBb0Isc1NBUnJCOzs7O0dBSVQ7MkZBSVUsb0JBQW9CO2tCQVZoQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QixRQUFRLEVBQUU7Ozs7R0FJVDtvQkFDRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzhCQUVVLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLO2dCQUNHLEdBQUc7c0JBQVgsS0FBSztnQkFHTixTQUFTO3NCQURSLFdBQVc7dUJBQUMsb0JBQW9CO2dCQU83QixhQUFhO3NCQUZoQixXQUFXO3VCQUFDLG1DQUFtQzs7c0JBQy9DLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBIb3N0QmluZGluZyxcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgU2ltcGxlQ2hhbmdlcyxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyB0b0Jvb2xlYW4gfSBmcm9tIFwiLi4vY29tbW9uL2Jvb2xlYW4tcHJvcGVydHlcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcIm1kbC1wcm9ncmVzc1wiLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzc2JhciBiYXIgYmFyMVwiIFtzdHlsZS53aWR0aF09XCJwcm9ncmVzcyArICclJ1wiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJidWZmZXJiYXIgYmFyIGJhcjJcIiBbc3R5bGUud2lkdGhdPVwiYnVmZmVyICsgJyUnXCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImF1eGJhciBiYXIgYmFyM1wiIFtuZ1N0eWxlXT1cInsgd2lkdGg6IGF1eCArICclJyB9XCI+PC9kaXY+XG4gIGAsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBNZGxQcm9ncmVzc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHByb2dyZXNzID0gMDtcbiAgQElucHV0KCkgYnVmZmVyID0gMTAwO1xuICBASW5wdXQoKSBhdXggPSAwO1xuXG4gIEBIb3N0QmluZGluZyhcImNsYXNzLm1kbC1wcm9ncmVzc1wiKVxuICBpc1Byb2dlc3MgPSB0cnVlO1xuXG4gIHByaXZhdGUgaW5kZXRlcm1pbmF0ZUludGVybiA9IGZhbHNlO1xuXG4gIEBIb3N0QmluZGluZyhcImNsYXNzLm1kbC1wcm9ncmVzc19faW5kZXRlcm1pbmF0ZVwiKVxuICBASW5wdXQoKVxuICBnZXQgaW5kZXRlcm1pbmF0ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5pbmRldGVybWluYXRlSW50ZXJuO1xuICB9XG5cbiAgc2V0IGluZGV0ZXJtaW5hdGUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLmluZGV0ZXJtaW5hdGVJbnRlcm4gPSB0b0Jvb2xlYW4odmFsdWUpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzW1wiYnVmZmVyXCJdKSB7XG4gICAgICB0aGlzLnNldEJ1ZmZlcihjaGFuZ2VzW1wiYnVmZmVyXCJdLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzZXRCdWZmZXIoYjogbnVtYmVyKSB7XG4gICAgdGhpcy5hdXggPSAxMDAgLSBiO1xuICB9XG59XG4iXX0=