import { Injectable } from "@angular/core";
import { Subject } from "rxjs";
import * as i0 from "@angular/core";
export class MdlLayoutMediatorService {
    constructor() {
        this.tabMouseoverSubject = new Subject();
        this.tabMouseoutSubject = new Subject();
        this.tabSelectedSubject = new Subject();
    }
    onTabMouseover() {
        return this.tabMouseoverSubject.asObservable();
    }
    tabMouseover(tab) {
        this.tabMouseoverSubject.next(tab);
    }
    onTabMouseOut() {
        return this.tabMouseoutSubject.asObservable();
    }
    tabMouseout(tab) {
        this.tabMouseoutSubject.next(tab);
    }
    onTabSelected() {
        return this.tabSelectedSubject.asObservable();
    }
    tabSelected(tab) {
        this.tabSelectedSubject.next(tab);
    }
}
MdlLayoutMediatorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlLayoutMediatorService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
MdlLayoutMediatorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlLayoutMediatorService, providedIn: "root" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlLayoutMediatorService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: "root",
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLWxheW91dC1tZWRpYXRvci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvbGliL2xheW91dC9tZGwtbGF5b3V0LW1lZGlhdG9yLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQWMsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQUszQyxNQUFNLE9BQU8sd0JBQXdCO0lBSHJDO1FBSVUsd0JBQW1CLEdBQUcsSUFBSSxPQUFPLEVBQThCLENBQUM7UUFDaEUsdUJBQWtCLEdBQUcsSUFBSSxPQUFPLEVBQThCLENBQUM7UUFDL0QsdUJBQWtCLEdBQUcsSUFBSSxPQUFPLEVBQThCLENBQUM7S0F5QnhFO0lBdkJDLGNBQWM7UUFDWixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNqRCxDQUFDO0lBRUQsWUFBWSxDQUFDLEdBQStCO1FBQzFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELGFBQWE7UUFDWCxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNoRCxDQUFDO0lBRUQsV0FBVyxDQUFDLEdBQStCO1FBQ3pDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELGFBQWE7UUFDWCxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNoRCxDQUFDO0lBRUQsV0FBVyxDQUFDLEdBQStCO1FBQ3pDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEMsQ0FBQzs7cUhBM0JVLHdCQUF3Qjt5SEFBeEIsd0JBQXdCLGNBRnZCLE1BQU07MkZBRVAsd0JBQXdCO2tCQUhwQyxVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgTWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQgfSBmcm9tIFwiLi9tZGwtbGF5b3V0LXRhYi1wYW5lbC5jb21wb25lbnRcIjtcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YmplY3QgfSBmcm9tIFwicnhqc1wiO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46IFwicm9vdFwiLFxufSlcbmV4cG9ydCBjbGFzcyBNZGxMYXlvdXRNZWRpYXRvclNlcnZpY2Uge1xuICBwcml2YXRlIHRhYk1vdXNlb3ZlclN1YmplY3QgPSBuZXcgU3ViamVjdDxNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudD4oKTtcbiAgcHJpdmF0ZSB0YWJNb3VzZW91dFN1YmplY3QgPSBuZXcgU3ViamVjdDxNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudD4oKTtcbiAgcHJpdmF0ZSB0YWJTZWxlY3RlZFN1YmplY3QgPSBuZXcgU3ViamVjdDxNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudD4oKTtcblxuICBvblRhYk1vdXNlb3ZlcigpOiBPYnNlcnZhYmxlPE1kbExheW91dFRhYlBhbmVsQ29tcG9uZW50PiB7XG4gICAgcmV0dXJuIHRoaXMudGFiTW91c2VvdmVyU3ViamVjdC5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIHRhYk1vdXNlb3Zlcih0YWI6IE1kbExheW91dFRhYlBhbmVsQ29tcG9uZW50KTogdm9pZCB7XG4gICAgdGhpcy50YWJNb3VzZW92ZXJTdWJqZWN0Lm5leHQodGFiKTtcbiAgfVxuXG4gIG9uVGFiTW91c2VPdXQoKTogT2JzZXJ2YWJsZTxNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudD4ge1xuICAgIHJldHVybiB0aGlzLnRhYk1vdXNlb3V0U3ViamVjdC5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIHRhYk1vdXNlb3V0KHRhYjogTWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQpOiB2b2lkIHtcbiAgICB0aGlzLnRhYk1vdXNlb3V0U3ViamVjdC5uZXh0KHRhYik7XG4gIH1cblxuICBvblRhYlNlbGVjdGVkKCk6IE9ic2VydmFibGU8TWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQ+IHtcbiAgICByZXR1cm4gdGhpcy50YWJTZWxlY3RlZFN1YmplY3QuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICB0YWJTZWxlY3RlZCh0YWI6IE1kbExheW91dFRhYlBhbmVsQ29tcG9uZW50KTogdm9pZCB7XG4gICAgdGhpcy50YWJTZWxlY3RlZFN1YmplY3QubmV4dCh0YWIpO1xuICB9XG59XG4iXX0=