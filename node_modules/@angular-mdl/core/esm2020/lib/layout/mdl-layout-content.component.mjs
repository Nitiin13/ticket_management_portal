import { Component, ContentChildren, ElementRef, HostBinding, QueryList, ViewEncapsulation, } from "@angular/core";
import { MdlLayoutTabPanelComponent } from "./mdl-layout-tab-panel.component";
import * as i0 from "@angular/core";
export class MdlLayoutContentComponent {
    constructor(elRef) {
        this.elRef = elRef;
        this.isContent = true;
        this.tabs = new QueryList();
        this.el = elRef.nativeElement;
    }
}
MdlLayoutContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlLayoutContentComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
MdlLayoutContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: MdlLayoutContentComponent, selector: "mdl-layout-content", host: { properties: { "class.mdl-layout__content": "this.isContent" } }, queries: [{ propertyName: "tabs", predicate: MdlLayoutTabPanelComponent }], ngImport: i0, template: ` <ng-content></ng-content>`, isInline: true, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlLayoutContentComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "mdl-layout-content",
                    template: ` <ng-content></ng-content>`,
                    encapsulation: ViewEncapsulation.None,
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { isContent: [{
                type: HostBinding,
                args: ["class.mdl-layout__content"]
            }], tabs: [{
                type: ContentChildren,
                args: [MdlLayoutTabPanelComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLWxheW91dC1jb250ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvc3JjL2xpYi9sYXlvdXQvbWRsLWxheW91dC1jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULGVBQWUsRUFDZixVQUFVLEVBQ1YsV0FBVyxFQUNYLFNBQVMsRUFDVCxpQkFBaUIsR0FDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7O0FBTzlFLE1BQU0sT0FBTyx5QkFBeUI7SUFRcEMsWUFBb0IsS0FBaUI7UUFBakIsVUFBSyxHQUFMLEtBQUssQ0FBWTtRQU5yQyxjQUFTLEdBQUcsSUFBSSxDQUFDO1FBRWpCLFNBQUksR0FBMEMsSUFBSSxTQUFTLEVBQThCLENBQUM7UUFLeEYsSUFBSSxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUMsYUFBYSxDQUFDO0lBQ2hDLENBQUM7O3NIQVZVLHlCQUF5QjswR0FBekIseUJBQXlCLHdKQUduQiwwQkFBMEIsNkJBTmpDLDRCQUE0QjsyRkFHM0IseUJBQXlCO2tCQUxyQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFFBQVEsRUFBRSw0QkFBNEI7b0JBQ3RDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2lCQUN0QztpR0FHQyxTQUFTO3NCQURSLFdBQVc7dUJBQUMsMkJBQTJCO2dCQUd4QyxJQUFJO3NCQURILGVBQWU7dUJBQUMsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBDb250ZW50Q2hpbGRyZW4sXG4gIEVsZW1lbnRSZWYsXG4gIEhvc3RCaW5kaW5nLFxuICBRdWVyeUxpc3QsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgTWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQgfSBmcm9tIFwiLi9tZGwtbGF5b3V0LXRhYi1wYW5lbC5jb21wb25lbnRcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcIm1kbC1sYXlvdXQtY29udGVudFwiLFxuICB0ZW1wbGF0ZTogYCA8bmctY29udGVudD48L25nLWNvbnRlbnQ+YCxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbn0pXG5leHBvcnQgY2xhc3MgTWRsTGF5b3V0Q29udGVudENvbXBvbmVudCB7XG4gIEBIb3N0QmluZGluZyhcImNsYXNzLm1kbC1sYXlvdXRfX2NvbnRlbnRcIilcbiAgaXNDb250ZW50ID0gdHJ1ZTtcbiAgQENvbnRlbnRDaGlsZHJlbihNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudClcbiAgdGFiczogUXVlcnlMaXN0PE1kbExheW91dFRhYlBhbmVsQ29tcG9uZW50PiA9IG5ldyBRdWVyeUxpc3Q8TWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQ+KCk7XG5cbiAgZWw6IEhUTUxFbGVtZW50O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICB0aGlzLmVsID0gZWxSZWYubmF0aXZlRWxlbWVudDtcbiAgfVxufVxuIl19