import { Directive, HostListener, Input } from "@angular/core";
import { MdlButtonComponent } from "../button/mdl-button.component";
import * as i0 from "@angular/core";
import * as i1 from "../button/mdl-button.component";
export class MdlToggleMenuDirective {
    constructor(button) {
        this.button = button;
    }
    onClick($event) {
        this.menu?.toggle($event, this.button);
    }
}
MdlToggleMenuDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlToggleMenuDirective, deps: [{ token: i1.MdlButtonComponent }], target: i0.ɵɵFactoryTarget.Directive });
MdlToggleMenuDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.4", type: MdlToggleMenuDirective, selector: "[mdl-button][mdl-toggle-menu]", inputs: { menu: ["mdl-toggle-menu", "menu"] }, host: { listeners: { "click": "onClick($event)" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlToggleMenuDirective, decorators: [{
            type: Directive,
            args: [{
                    // eslint-disable-next-line
                    selector: "[mdl-button][mdl-toggle-menu]",
                }]
        }], ctorParameters: function () { return [{ type: i1.MdlButtonComponent }]; }, propDecorators: { menu: [{
                type: Input,
                args: ["mdl-toggle-menu"]
            }], onClick: [{
                type: HostListener,
                args: ["click", ["$event"]]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLXRvZ2dsZS1tZW51LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvc3JjL2xpYi9tZW51L21kbC10b2dnbGUtbWVudS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9ELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOzs7QUFNcEUsTUFBTSxPQUFPLHNCQUFzQjtJQUtqQyxZQUFvQixNQUEwQjtRQUExQixXQUFNLEdBQU4sTUFBTSxDQUFvQjtJQUFHLENBQUM7SUFHM0MsT0FBTyxDQUFDLE1BQWE7UUFDMUIsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN6QyxDQUFDOzttSEFWVSxzQkFBc0I7dUdBQXRCLHNCQUFzQjsyRkFBdEIsc0JBQXNCO2tCQUpsQyxTQUFTO21CQUFDO29CQUNULDJCQUEyQjtvQkFDM0IsUUFBUSxFQUFFLCtCQUErQjtpQkFDMUM7eUdBSUMsSUFBSTtzQkFESCxLQUFLO3VCQUFDLGlCQUFpQjtnQkFNakIsT0FBTztzQkFEYixZQUFZO3VCQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBNZGxNZW51Q29tcG9uZW50IH0gZnJvbSBcIi4vbWRsLW1lbnUuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBNZGxCdXR0b25Db21wb25lbnQgfSBmcm9tIFwiLi4vYnV0dG9uL21kbC1idXR0b24uY29tcG9uZW50XCI7XG5cbkBEaXJlY3RpdmUoe1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgc2VsZWN0b3I6IFwiW21kbC1idXR0b25dW21kbC10b2dnbGUtbWVudV1cIixcbn0pXG5leHBvcnQgY2xhc3MgTWRsVG9nZ2xlTWVudURpcmVjdGl2ZSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICBASW5wdXQoXCJtZGwtdG9nZ2xlLW1lbnVcIilcbiAgbWVudTogTWRsTWVudUNvbXBvbmVudCB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGJ1dHRvbjogTWRsQnV0dG9uQ29tcG9uZW50KSB7fVxuXG4gIEBIb3N0TGlzdGVuZXIoXCJjbGlja1wiLCBbXCIkZXZlbnRcIl0pXG4gIHB1YmxpYyBvbkNsaWNrKCRldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICB0aGlzLm1lbnU/LnRvZ2dsZSgkZXZlbnQsIHRoaXMuYnV0dG9uKTtcbiAgfVxufVxuIl19