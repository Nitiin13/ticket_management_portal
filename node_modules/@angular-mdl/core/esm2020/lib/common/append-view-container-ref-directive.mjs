import { Directive, Input, Renderer2, ViewContainerRef, } from "@angular/core";
import * as i0 from "@angular/core";
export class AppendViewContainerRefDirective {
    constructor(viewRef, renderer) {
        this.viewRef = viewRef;
        this.renderer = renderer;
    }
    ngAfterViewInit() {
        this.renderer.appendChild(this.viewRef.element.nativeElement, this.viewContainerRefToAppend?.element.nativeElement);
    }
}
AppendViewContainerRefDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AppendViewContainerRefDirective, deps: [{ token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });
AppendViewContainerRefDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.4", type: AppendViewContainerRefDirective, selector: "[append-view-container-ref]", inputs: { viewContainerRefToAppend: ["append-view-container-ref", "viewContainerRefToAppend"] }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: AppendViewContainerRefDirective, decorators: [{
            type: Directive,
            args: [{
                    // eslint-disable-next-line
                    selector: "[append-view-container-ref]",
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { viewContainerRefToAppend: [{
                type: Input,
                args: ["append-view-container-ref"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZW5kLXZpZXctY29udGFpbmVyLXJlZi1kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9saWIvY29tbW9uL2FwcGVuZC12aWV3LWNvbnRhaW5lci1yZWYtZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLFNBQVMsRUFDVCxnQkFBZ0IsR0FDakIsTUFBTSxlQUFlLENBQUM7O0FBTXZCLE1BQU0sT0FBTywrQkFBK0I7SUFJMUMsWUFBb0IsT0FBeUIsRUFBVSxRQUFtQjtRQUF0RCxZQUFPLEdBQVAsT0FBTyxDQUFrQjtRQUFVLGFBQVEsR0FBUixRQUFRLENBQVc7SUFBRyxDQUFDO0lBRTlFLGVBQWU7UUFDYixJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUNsQyxJQUFJLENBQUMsd0JBQXdCLEVBQUUsT0FBTyxDQUFDLGFBQWEsQ0FDckQsQ0FBQztJQUNKLENBQUM7OzRIQVhVLCtCQUErQjtnSEFBL0IsK0JBQStCOzJGQUEvQiwrQkFBK0I7a0JBSjNDLFNBQVM7bUJBQUM7b0JBQ1QsMkJBQTJCO29CQUMzQixRQUFRLEVBQUUsNkJBQTZCO2lCQUN4QzsrSEFHQyx3QkFBd0I7c0JBRHZCLEtBQUs7dUJBQUMsMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgRGlyZWN0aXZlLFxuICBJbnB1dCxcbiAgUmVuZGVyZXIyLFxuICBWaWV3Q29udGFpbmVyUmVmLFxufSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5ARGlyZWN0aXZlKHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gIHNlbGVjdG9yOiBcIlthcHBlbmQtdmlldy1jb250YWluZXItcmVmXVwiLFxufSlcbmV4cG9ydCBjbGFzcyBBcHBlbmRWaWV3Q29udGFpbmVyUmVmRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBJbnB1dChcImFwcGVuZC12aWV3LWNvbnRhaW5lci1yZWZcIilcbiAgdmlld0NvbnRhaW5lclJlZlRvQXBwZW5kOiBWaWV3Q29udGFpbmVyUmVmIHwgdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdmlld1JlZjogVmlld0NvbnRhaW5lclJlZiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnJlbmRlcmVyLmFwcGVuZENoaWxkKFxuICAgICAgdGhpcy52aWV3UmVmLmVsZW1lbnQubmF0aXZlRWxlbWVudCxcbiAgICAgIHRoaXMudmlld0NvbnRhaW5lclJlZlRvQXBwZW5kPy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnRcbiAgICApO1xuICB9XG59XG4iXX0=