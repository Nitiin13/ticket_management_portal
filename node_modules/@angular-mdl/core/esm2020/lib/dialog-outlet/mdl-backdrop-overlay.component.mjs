import { Component, EventEmitter, HostBinding, HostListener, NgZone, ViewEncapsulation, } from "@angular/core";
import * as i0 from "@angular/core";
export class MdlBackdropOverlayComponent {
    constructor(ngZone) {
        this.ngZone = ngZone;
        this.zIndex = 0;
        this.isBackdrop = true;
        this.clickEmitter = new EventEmitter();
        this.visible = false;
    }
    get display() {
        return this.visible ? null : "none";
    }
    onBackdropClick(e) {
        // this event runs not in angular zone of the main app. make sure it runs in the main angular zone
        // and change detection works
        this.ngZone.run(() => {
            this.clickEmitter.emit();
        });
        e.stopPropagation();
    }
    hide() {
        this.visible = false;
    }
    showWithZIndex(zIndex) {
        this.zIndex = zIndex;
        this.visible = true;
    }
}
MdlBackdropOverlayComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlBackdropOverlayComponent, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });
MdlBackdropOverlayComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: MdlBackdropOverlayComponent, selector: "mdl-backdrop-overlay", host: { listeners: { "click": "onBackdropClick($event)" }, properties: { "style.zIndex": "this.zIndex", "class.dialog-backdrop": "this.isBackdrop", "style.display": "this.display" } }, ngImport: i0, template: ``, isInline: true, styles: [".dialog-backdrop{position:fixed;inset:0;background:rgba(0,0,0,.1)}\n"], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlBackdropOverlayComponent, decorators: [{
            type: Component,
            args: [{ selector: "mdl-backdrop-overlay", template: ``, encapsulation: ViewEncapsulation.None, styles: [".dialog-backdrop{position:fixed;inset:0;background:rgba(0,0,0,.1)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { zIndex: [{
                type: HostBinding,
                args: ["style.zIndex"]
            }], isBackdrop: [{
                type: HostBinding,
                args: ["class.dialog-backdrop"]
            }], display: [{
                type: HostBinding,
                args: ["style.display"]
            }], onBackdropClick: [{
                type: HostListener,
                args: ["click", ["$event"]]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLWJhY2tkcm9wLW92ZXJsYXkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvbGliL2RpYWxvZy1vdXRsZXQvbWRsLWJhY2tkcm9wLW92ZXJsYXkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxZQUFZLEVBQ1osTUFBTSxFQUNOLGlCQUFpQixHQUNsQixNQUFNLGVBQWUsQ0FBQzs7QUFtQnZCLE1BQU0sT0FBTywyQkFBMkI7SUFXdEMsWUFBb0IsTUFBYztRQUFkLFdBQU0sR0FBTixNQUFNLENBQVE7UUFUbEMsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUdYLGVBQVUsR0FBRyxJQUFJLENBQUM7UUFFWCxpQkFBWSxHQUF1QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBRXJELFlBQU8sR0FBRyxLQUFLLENBQUM7SUFFYSxDQUFDO0lBRXRDLElBQ0ksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDdEMsQ0FBQztJQUdELGVBQWUsQ0FBQyxDQUFRO1FBQ3RCLGtHQUFrRztRQUNsRyw2QkFBNkI7UUFDN0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFO1lBQ25CLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDM0IsQ0FBQyxDQUFDLENBQUM7UUFDSCxDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBRUQsY0FBYyxDQUFDLE1BQWM7UUFDM0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDdEIsQ0FBQzs7d0hBbkNVLDJCQUEyQjs0R0FBM0IsMkJBQTJCLHFQQWY1QixFQUFFOzJGQWVELDJCQUEyQjtrQkFqQnZDLFNBQVM7K0JBQ0Usc0JBQXNCLFlBQ3RCLEVBQUUsaUJBYUcsaUJBQWlCLENBQUMsSUFBSTs2RkFJckMsTUFBTTtzQkFETCxXQUFXO3VCQUFDLGNBQWM7Z0JBSTNCLFVBQVU7c0JBRFQsV0FBVzt1QkFBQyx1QkFBdUI7Z0JBVWhDLE9BQU87c0JBRFYsV0FBVzt1QkFBQyxlQUFlO2dCQU01QixlQUFlO3NCQURkLFlBQVk7dUJBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBFdmVudEVtaXR0ZXIsXG4gIEhvc3RCaW5kaW5nLFxuICBIb3N0TGlzdGVuZXIsXG4gIE5nWm9uZSxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJtZGwtYmFja2Ryb3Atb3ZlcmxheVwiLFxuICB0ZW1wbGF0ZTogYGAsXG4gIHN0eWxlczogW1xuICAgIGBcbiAgICAgIC5kaWFsb2ctYmFja2Ryb3Age1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgICAgfVxuICAgIGAsXG4gIF0sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG59KVxuZXhwb3J0IGNsYXNzIE1kbEJhY2tkcm9wT3ZlcmxheUNvbXBvbmVudCB7XG4gIEBIb3N0QmluZGluZyhcInN0eWxlLnpJbmRleFwiKVxuICB6SW5kZXggPSAwO1xuXG4gIEBIb3N0QmluZGluZyhcImNsYXNzLmRpYWxvZy1iYWNrZHJvcFwiKVxuICBpc0JhY2tkcm9wID0gdHJ1ZTtcblxuICBwdWJsaWMgY2xpY2tFbWl0dGVyOiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcHJpdmF0ZSB2aXNpYmxlID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBuZ1pvbmU6IE5nWm9uZSkge31cblxuICBASG9zdEJpbmRpbmcoXCJzdHlsZS5kaXNwbGF5XCIpXG4gIGdldCBkaXNwbGF5KCk6IHN0cmluZyB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLnZpc2libGUgPyBudWxsIDogXCJub25lXCI7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKFwiY2xpY2tcIiwgW1wiJGV2ZW50XCJdKVxuICBvbkJhY2tkcm9wQ2xpY2soZTogRXZlbnQpOiB2b2lkIHtcbiAgICAvLyB0aGlzIGV2ZW50IHJ1bnMgbm90IGluIGFuZ3VsYXIgem9uZSBvZiB0aGUgbWFpbiBhcHAuIG1ha2Ugc3VyZSBpdCBydW5zIGluIHRoZSBtYWluIGFuZ3VsYXIgem9uZVxuICAgIC8vIGFuZCBjaGFuZ2UgZGV0ZWN0aW9uIHdvcmtzXG4gICAgdGhpcy5uZ1pvbmUucnVuKCgpID0+IHtcbiAgICAgIHRoaXMuY2xpY2tFbWl0dGVyLmVtaXQoKTtcbiAgICB9KTtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgaGlkZSgpOiB2b2lkIHtcbiAgICB0aGlzLnZpc2libGUgPSBmYWxzZTtcbiAgfVxuXG4gIHNob3dXaXRoWkluZGV4KHpJbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy56SW5kZXggPSB6SW5kZXg7XG4gICAgdGhpcy52aXNpYmxlID0gdHJ1ZTtcbiAgfVxufVxuIl19