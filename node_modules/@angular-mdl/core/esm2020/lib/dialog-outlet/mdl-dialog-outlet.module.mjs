import { NgModule } from "@angular/core";
import { MdlDialogOutletComponent } from "./mdl-dialog-outlet.component";
import { MdlDialogOutletService } from "./mdl-dialog-outlet.service";
import { MdlBackdropOverlayComponent } from "./mdl-backdrop-overlay.component";
import { MdlDialogInnerOutletComponent } from "./mdl-dialog-inner-outlet.component";
import * as i0 from "@angular/core";
export * from "./mdl-dialog-outlet.component";
export * from "./mdl-dialog-outlet.service";
export * from "./mdl-backdrop-overlay.component";
export * from "./mdl-dialog-inner-outlet.component";
const PUBLIC_COMPONENTS = [MdlDialogInnerOutletComponent];
const PRIVATE_COMPONENTS = [
    MdlDialogOutletComponent,
    MdlBackdropOverlayComponent,
];
export class MdlDialogOutletModule {
    static forRoot() {
        return {
            ngModule: MdlDialogOutletModule,
            providers: [MdlDialogOutletService],
        };
    }
}
MdlDialogOutletModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlDialogOutletModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
MdlDialogOutletModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.0.4", ngImport: i0, type: MdlDialogOutletModule, declarations: [MdlDialogInnerOutletComponent, MdlDialogOutletComponent,
        MdlBackdropOverlayComponent], exports: [MdlDialogInnerOutletComponent] });
MdlDialogOutletModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlDialogOutletModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlDialogOutletModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [],
                    exports: PUBLIC_COMPONENTS,
                    declarations: [...PUBLIC_COMPONENTS, ...PRIVATE_COMPONENTS],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLWRpYWxvZy1vdXRsZXQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvbGliL2RpYWxvZy1vdXRsZXQvbWRsLWRpYWxvZy1vdXRsZXQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDOztBQUVwRixjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsNkJBQTZCLENBQUM7QUFDNUMsY0FBYyxrQ0FBa0MsQ0FBQztBQUNqRCxjQUFjLHFDQUFxQyxDQUFDO0FBRXBELE1BQU0saUJBQWlCLEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0FBRTFELE1BQU0sa0JBQWtCLEdBQUc7SUFDekIsd0JBQXdCO0lBQ3hCLDJCQUEyQjtDQUM1QixDQUFDO0FBT0YsTUFBTSxPQUFPLHFCQUFxQjtJQUN6QixNQUFNLENBQUMsT0FBTztRQUNuQixPQUFPO1lBQ0wsUUFBUSxFQUFFLHFCQUFxQjtZQUMvQixTQUFTLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztTQUNwQyxDQUFDO0lBQ0osQ0FBQzs7a0hBTlUscUJBQXFCO21IQUFyQixxQkFBcUIsaUJBWlAsNkJBQTZCLEVBR3RELHdCQUF3QjtRQUN4QiwyQkFBMkIsYUFKRiw2QkFBNkI7bUhBWTNDLHFCQUFxQjsyRkFBckIscUJBQXFCO2tCQUxqQyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxFQUFFO29CQUNYLE9BQU8sRUFBRSxpQkFBaUI7b0JBQzFCLFlBQVksRUFBRSxDQUFDLEdBQUcsaUJBQWlCLEVBQUUsR0FBRyxrQkFBa0IsQ0FBQztpQkFDNUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBNZGxEaWFsb2dPdXRsZXRDb21wb25lbnQgfSBmcm9tIFwiLi9tZGwtZGlhbG9nLW91dGxldC5jb21wb25lbnRcIjtcbmltcG9ydCB7IE1kbERpYWxvZ091dGxldFNlcnZpY2UgfSBmcm9tIFwiLi9tZGwtZGlhbG9nLW91dGxldC5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBNZGxCYWNrZHJvcE92ZXJsYXlDb21wb25lbnQgfSBmcm9tIFwiLi9tZGwtYmFja2Ryb3Atb3ZlcmxheS5jb21wb25lbnRcIjtcbmltcG9ydCB7IE1kbERpYWxvZ0lubmVyT3V0bGV0Q29tcG9uZW50IH0gZnJvbSBcIi4vbWRsLWRpYWxvZy1pbm5lci1vdXRsZXQuY29tcG9uZW50XCI7XG5cbmV4cG9ydCAqIGZyb20gXCIuL21kbC1kaWFsb2ctb3V0bGV0LmNvbXBvbmVudFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWRsLWRpYWxvZy1vdXRsZXQuc2VydmljZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWRsLWJhY2tkcm9wLW92ZXJsYXkuY29tcG9uZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9tZGwtZGlhbG9nLWlubmVyLW91dGxldC5jb21wb25lbnRcIjtcblxuY29uc3QgUFVCTElDX0NPTVBPTkVOVFMgPSBbTWRsRGlhbG9nSW5uZXJPdXRsZXRDb21wb25lbnRdO1xuXG5jb25zdCBQUklWQVRFX0NPTVBPTkVOVFMgPSBbXG4gIE1kbERpYWxvZ091dGxldENvbXBvbmVudCxcbiAgTWRsQmFja2Ryb3BPdmVybGF5Q29tcG9uZW50LFxuXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW10sXG4gIGV4cG9ydHM6IFBVQkxJQ19DT01QT05FTlRTLFxuICBkZWNsYXJhdGlvbnM6IFsuLi5QVUJMSUNfQ09NUE9ORU5UUywgLi4uUFJJVkFURV9DT01QT05FTlRTXSxcbn0pXG5leHBvcnQgY2xhc3MgTWRsRGlhbG9nT3V0bGV0TW9kdWxlIHtcbiAgcHVibGljIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TWRsRGlhbG9nT3V0bGV0TW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBNZGxEaWFsb2dPdXRsZXRNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtNZGxEaWFsb2dPdXRsZXRTZXJ2aWNlXSxcbiAgICB9O1xuICB9XG59XG4iXX0=