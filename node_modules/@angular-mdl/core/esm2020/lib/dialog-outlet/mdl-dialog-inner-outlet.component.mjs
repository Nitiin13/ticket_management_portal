// the component is used inside the app-root. this is possible because this component
// is exported from the module
import { Component, forwardRef, Inject, ViewContainerRef } from "@angular/core";
import { MdlDialogOutletService } from "./mdl-dialog-outlet.service";
import * as i0 from "@angular/core";
import * as i1 from "./mdl-dialog-outlet.service";
export class MdlDialogInnerOutletComponent {
    constructor(vCRef, service) {
        this.vCRef = vCRef;
        service.setDefaultViewContainerRef(vCRef);
    }
}
MdlDialogInnerOutletComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlDialogInnerOutletComponent, deps: [{ token: i0.ViewContainerRef }, { token: forwardRef(() => MdlDialogOutletService) }], target: i0.ɵɵFactoryTarget.Component });
MdlDialogInnerOutletComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.4", type: MdlDialogInnerOutletComponent, selector: "dialog-outlet", ngImport: i0, template: "", isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: MdlDialogInnerOutletComponent, decorators: [{
            type: Component,
            args: [{
                    // eslint-disable-next-line
                    selector: 'dialog-outlet',
                    template: "",
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i1.MdlDialogOutletService, decorators: [{
                    type: Inject,
                    args: [forwardRef(() => MdlDialogOutletService)]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLWRpYWxvZy1pbm5lci1vdXRsZXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvbGliL2RpYWxvZy1vdXRsZXQvbWRsLWRpYWxvZy1pbm5lci1vdXRsZXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFGQUFxRjtBQUNyRiw4QkFBOEI7QUFDOUIsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDOzs7QUFPckUsTUFBTSxPQUFPLDZCQUE2QjtJQUN4QyxZQUNVLEtBQXVCLEVBRS9CLE9BQStCO1FBRnZCLFVBQUssR0FBTCxLQUFLLENBQWtCO1FBSS9CLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QyxDQUFDOzswSEFQVSw2QkFBNkIsa0RBRzlCLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQzs4R0FIdkMsNkJBQTZCLHFEQUY5QixFQUFFOzJGQUVELDZCQUE2QjtrQkFMekMsU0FBUzttQkFBQztvQkFDVCwyQkFBMkI7b0JBQzNCLFFBQVEsRUFBRSxlQUFlO29CQUN6QixRQUFRLEVBQUUsRUFBRTtpQkFDYjs7MEJBSUksTUFBTTsyQkFBQyxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsc0JBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0aGUgY29tcG9uZW50IGlzIHVzZWQgaW5zaWRlIHRoZSBhcHAtcm9vdC4gdGhpcyBpcyBwb3NzaWJsZSBiZWNhdXNlIHRoaXMgY29tcG9uZW50XG4vLyBpcyBleHBvcnRlZCBmcm9tIHRoZSBtb2R1bGVcbmltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5qZWN0LCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE1kbERpYWxvZ091dGxldFNlcnZpY2UgfSBmcm9tIFwiLi9tZGwtZGlhbG9nLW91dGxldC5zZXJ2aWNlXCI7XG5cbkBDb21wb25lbnQoe1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgc2VsZWN0b3I6ICdkaWFsb2ctb3V0bGV0JyxcbiAgdGVtcGxhdGU6IFwiXCIsXG59KVxuZXhwb3J0IGNsYXNzIE1kbERpYWxvZ0lubmVyT3V0bGV0Q29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB2Q1JlZjogVmlld0NvbnRhaW5lclJlZixcbiAgICBASW5qZWN0KGZvcndhcmRSZWYoKCkgPT4gTWRsRGlhbG9nT3V0bGV0U2VydmljZSkpXG4gICAgc2VydmljZTogTWRsRGlhbG9nT3V0bGV0U2VydmljZVxuICApIHtcbiAgICBzZXJ2aWNlLnNldERlZmF1bHRWaWV3Q29udGFpbmVyUmVmKHZDUmVmKTtcbiAgfVxufVxuIl19