import { InjectionToken } from "@angular/core";
import { MdlButtonComponent, MdlDialogReference } from "@angular-mdl/core";
import * as momentNs from "moment";
import { DatePickerOptions } from "./date-picker-option";
import * as i0 from "@angular/core";
export declare const CURRENT_DATE: InjectionToken<Date>;
export declare const DATEPICKER_CONFIG: InjectionToken<DatePickerOptions>;
interface DpDays {
    isCurrentMonth: boolean;
    day: momentNs.Moment;
}
interface DpWeek {
    days: DpDays[];
    week: number;
}
export declare class DatePickerDialogComponent {
    private dialog;
    private initialDate;
    private options;
    okButton: MdlButtonComponent | undefined;
    okLabel: string;
    cancelLabel: string;
    mDate: momentNs.Moment;
    prevEnabled: boolean;
    nextEnabled: boolean;
    monthGridWeekDays: string[];
    monthGridDays: DpWeek[];
    pmCurrentMonth: momentNs.Moment;
    constructor(dialog: MdlDialogReference, initialDate: Date, options: DatePickerOptions);
    get mCurrentMonth(): momentNs.Moment;
    set mCurrentMonth(m: momentNs.Moment);
    onEsc(): void;
    onOk(): void;
    onCancel(): void;
    prevMonth(): void;
    nextMonth(): void;
    isActualDate(day: momentNs.Moment): boolean;
    setCurrentDay(day: momentNs.Moment): void;
    private calculateMonthGrid;
    private createMonthRow;
    private isCurrentMonth;
    static ɵfac: i0.ɵɵFactoryDeclaration<DatePickerDialogComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DatePickerDialogComponent, "datepicker", never, {}, {}, never, never, false, never>;
}
export {};
